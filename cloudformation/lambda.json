{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Deploys AWS Lambda function to capture API call data for a Resurface instance, with its corresponding IAM role",
    "Parameters" : {
        "EventSource" : {
            "Type" : "String",
            "Default" : "softwareag",
            "AllowedValues" : [ "softwareag" ],
            "Description" : "Identifies the library used to parse incoming events"
        },
        "ResurfaceURL" : {
            "Type" : "String",
            "Description" : "URL pointing to the Resurface /message capturing endpoint"
        },
        "ResurfaceRules" : {
            "Type" : "String",
            "Default" : "include debug",
            "Description" : "Active set of rules used to mask sensitive incoming data. More info: https://resurface.io/logging-rules"
        }
    },
    "Resources" : {
        "ResurfaceLambdaExecutionRole" : {
            "Type" : "AWS::IAM::Role",
            "Properties" : {
                "AssumeRolePolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": { "Service": "lambda.amazonaws.com" },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Description" : "Basic IAM Role for Lambda function execution",
                "ManagedPolicyArns" : [ "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole" ]
              }
          },
        "ResurfaceLambda" : {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": "lambda-functions",
                    "S3Key": "logger-lambda.zip",
                    "S3ObjectVersion": "latest"
                },
                "Description": "Sends API Call data to a Resurface instance. Resurface discovers and alerts on quality and security signatures in your API traffic.",
                "Environment": {
                    "Variables" : {
                        "EVENT_SOURCE" : { "Ref" : "EventSource" },
                        "USAGE_LOGGERS_URL" : { "Ref" : "ResurfaceURL" },
                        "USAGE_LOGGERS_RULES" : { "Ref" : "ResurfaceRules" },
                        "USAGE_LOGGERS_DISABLE" : false
                    }
                },
                "MemorySize": 1024,
                "Role": { "Fn::GetAtt": [ "ResurfaceLambdaExecutionRole", "Arn" ] },
                "Runtime": "nodejs16.x"
            }
        },
        "ResurfaceLambdaURL" : {
            "Type" : "AWS::Lambda::Url",
            "Properties" : {
                "AuthType" : "NONE",
                "TargetFunctionArn" : { "Fn::GetAtt": [ "ResurfaceLambda", "Arn" ] }
              }
          }          
    },
    "Outputs" : {
        "Name" : {
            "Description" : "Name of the lambda function",
            "Value" : { "Fn::GetAtt" : [ "ResurfaceLambda", "FunctionName" ] }
        },
        "URL" : {
            "Description" : "Function's URL",
            "Value" : ""
        }
    }
}